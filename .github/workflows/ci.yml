name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - '**'

jobs:
  build-env:
    name: Build Conda Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: lenapy_env
          environment-file: conda-lock.yml
          auto-activate-base: false

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install conda-lock
          pip install -e .[test]

  formater:
    name: Code Formatting Check
    runs-on: ubuntu-latest
    needs: build-env
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: lenapy_env
          auto-activate-base: false

      - name: Install Formatting Tools
        shell: bash -l {0}
        run: pip install .[formatter]

      - name: Run Black & Isort
        shell: bash -l {0}
        run: |
          black --check --diff lenapy
          isort lenapy --check --diff

  pytest:
    name: Run Pytest
    runs-on: ubuntu-latest
    needs: build-env
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: lenapy_env
          auto-activate-base: false

      - name: Install Dependencies
        shell: bash -l {0}
        run: pip install -e .[test]

      - name: Run Pytest with Coverage
        shell: bash -l {0}
        run: |
          pytest -s tests --cov=lenapy --cov-report=xml:.ci-reports/coverage.xml --cov-report html:cov_html --cov-report=term

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: |
            .ci-reports/
            cov_html/

  test_notebooks:
    name: Test Jupyter Notebooks
    runs-on: ubuntu-latest
    needs: build-env
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: lenapy_env
          auto-activate-base: false

      - name: Install Notebook Dependencies
        shell: bash -l {0}
        run: |
          pip install -e .[test]
          pip install -e .[notebook]

      - name: Run Pytest on Notebooks
        shell: bash -l {0}
        run: pytest --nbmake --nbmake-kernel=python3 doc/tutorials/

  pylint_analysis:
    name: Pylint Code Analysis
    runs-on: ubuntu-latest
    needs: build-env
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: lenapy_env
          auto-activate-base: false

      - name: Install Quality Tools
        shell: bash -l {0}
        run: pip install .[quality]

      - name: Run Pylint
        shell: bash -l {0}
        run: |
          pylint --recursive=y --disable=all --fail-under=10 --enable=too-many-statements,too-many-nested-blocks lenapy | tee pylint_report.txt

      - name: Upload Pylint Report
        uses: actions/upload-artifact@v3
        with:
          name: pylint-report
          path: pylint_report.txt

  mccabe_analysis:
    name: McCabe Complexity Analysis
    runs-on: ubuntu-latest
    needs: build-env
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: lenapy_env
          auto-activate-base: false

      - name: Install Quality Tools
        shell: bash -l {0}
        run: pip install .[quality]

      - name: Run McCabe Complexity Check
        shell: bash -l {0}
        run: ./continuous_integration/scripts/check_mccabe_complexity.sh 25 lenapy
